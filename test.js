Query {
    [0]   _mongooseOptions: {},
    [0]   _transforms: [],
    [0]   _hooks: Kareem { _pres: Map(0) {}, _posts: Map(0) {} },
    [0]   _executionStack: null,
    [0]   mongooseCollection: Collection {
    [0]     collection: Collection { s: [Object] },
    [0]     Promise: [Function: Promise],
    [0]     modelName: 'Survey',
    [0]     _closed: false,
    [0]     opts: {
    [0]       autoIndex: true,
    [0]       autoCreate: true,
    [0]       schemaUserProvidedOptions: {},
    [0]       capped: false,
    [0]       Promise: [Function: Promise],
    [0]       '$wasForceClosed': undefined
    [0]     },
    [0]     name: 'surveys',
    [0]     collectionName: 'surveys',
    [0]     conn: NativeConnection {
    [0]       base: [Mongoose],
    [0]       collections: [Object],
    [0]       models: [Object],
    [0]       config: {},
    [0]       replica: false,
    [0]       options: null,
    [0]       otherDbs: [],
    [0]       relatedDbs: {},
    [0]       states: [Object: null prototype],
    [0]       _readyState: 1,
    [0]       _closeCalled: undefined,
    [0]       _hasOpened: true,
    [0]       plugins: [],
    [0]       id: 0,
    [0]       _queue: [],
    [0]       _listening: false,
    [0]       _connectionString: 'mongodb+srv://ShiftyPlatypus:4hQbVRvjHkA8eJu6@emailer-dev.lt94r.mongodb.net/emailer-dev?retryWrites=true&w=majority',
    [0]       _connectionOptions: [Object],
    [0]       client: [MongoClient],
    [0]       '$initialConnection': [Promise],
    [0]       db: [Db],
    [0]       host: 'emailer-dev-shard-00-01.lt94r.mongodb.net',
    [0]       port: 27017,
    [0]       name: 'emailer-dev'
    [0]     },
    [0]     queue: [],
    [0]     buffer: false,
    [0]     emitter: EventEmitter {
    [0]       _events: [Object: null prototype] {},
    [0]       _eventsCount: 0,
    [0]       _maxListeners: undefined,
    [0]       [Symbol(kCapture)]: false
    [0]     }
    [0]   },
    [0]   model: Model { Survey },
    [0]   schema: Schema {
    [0]     obj: {
    [0]       title: [Function: String],
    [0]       subject: [Function: String],
    [0]       body: [Function: String],
    [0]       recipients: [Array],
    [0]       yes: [Object],
    [0]       no: [Object],
    [0]       _user: [Object],
    [0]       dateSent: [Function: Date],
    [0]       lastResponded: [Function: Date]
    [0]     },
    [0]     paths: {
    [0]       title: [SchemaString],
    [0]       subject: [SchemaString],
    [0]       body: [SchemaString],
    [0]       recipients: [DocumentArrayPath],
    [0]       yes: [SchemaNumber],
    [0]       no: [SchemaNumber],
    [0]       _user: [ObjectId],
    [0]       dateSent: [SchemaDate],
    [0]       lastResponded: [SchemaDate],
    [0]       _id: [ObjectId],
    [0]       __v: [SchemaNumber]
    [0]     },
    [0]     aliases: {},
    [0]     subpaths: {
    [0]       'recipients.responded': [SchemaBoolean],
    [0]       'recipients.recipient': [SubdocumentPath],
    [0]       'recipients._id': [ObjectId],
    [0]       'recipients.recipient.firstName': [SchemaString],
    [0]       'recipients.recipient.lastName': [SchemaString],
    [0]       'recipients.recipient.email': [SchemaString],
    [0]       'recipients.recipient._id': [ObjectId]
    [0]     },
    [0]     virtuals: { id: [VirtualType] },
    [0]     singleNestedPaths: {},
    [0]     nested: {},
    [0]     inherits: {},
    [0]     callQueue: [],
    [0]     _indexes: [],
    [0]     methods: {},
    [0]     methodOptions: {},
    [0]     statics: {},
    [0]     tree: {
    [0]       title: [Function: String],
    [0]       subject: [Function: String],
    [0]       body: [Function: String],
    [0]       recipients: [Array],
    [0]       yes: [Object],
    [0]       no: [Object],
    [0]       _user: [Object],
    [0]       dateSent: [Function: Date],
    [0]       lastResponded: [Function: Date],
    [0]       _id: [Object],
    [0]       id: [VirtualType],
    [0]       __v: [Function: Number]
    [0]     },
    [0]     query: {},
    [0]     childSchemas: [ [Object] ],
    [0]     plugins: [ [Object], [Object], [Object], [Object], [Object], [Object] ],
    [0]     '$id': 4,
    [0]     mapPaths: [],
    [0]     s: { hooks: [Kareem] },
    [0]     _userProvidedOptions: {},
    [0]     options: {
    [0]       typeKey: 'type',
    [0]       id: true,
    [0]       _id: true,
    [0]       validateBeforeSave: true,
    [0]       read: null,
    [0]       shardKey: null,
    [0]       discriminatorKey: '__t',
    [0]       autoIndex: null,
    [0]       minimize: true,
    [0]       optimisticConcurrency: false,
    [0]       versionKey: '__v',
    [0]       capped: false,
    [0]       bufferCommands: true,
    [0]       strict: true,
    [0]       pluralization: true
    [0]     },
    [0]     '$globalPluginsApplied': true
    [0]   },
    [0]   op: 'updateOne',
    [0]   options: {},
    [0]   _conditions: {
    [0]     _id: '6144491bbf22c04709b58d2b',
    [0]     recipients: { '$elemMatch': [Object] }
    [0]   },
    [0]   _fields: undefined,
    [0]   _update: { '$inc': { yes: 1 }, '$set': { 'recipients.$.responded': true } },
    [0]   _path: undefined,
    [0]   _distinct: undefined,
    [0]   _collection: NodeCollection {
    [0]     collection: Collection {
    [0]       collection: [Collection],
    [0]       Promise: [Function: Promise],
    [0]       modelName: 'Survey',
    [0]       _closed: false,
    [0]       opts: [Object],
    [0]       name: 'surveys',
    [0]       collectionName: 'surveys',
    [0]       conn: [NativeConnection],
    [0]       queue: [],
    [0]       buffer: false,
    [0]       emitter: [EventEmitter]
    [0]     },
    [0]     collectionName: 'surveys'
    [0]   },
    [0]   _traceFunction: undefined,
    [0]   '$useProjection': true
    [0] }